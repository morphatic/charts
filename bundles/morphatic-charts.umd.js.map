{
  "version": 3,
  "file": "morphatic-charts.umd.js",
  "sources": [
    "ng://@morphatic/charts/node_modules/d3-time-format/src/locale.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcYear.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcMonth.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcWeek.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcDay.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcHour.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/utcMinute.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/year.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/month.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/week.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/day.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/hour.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/minute.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/second.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/duration.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/millisecond.js",
    "ng://@morphatic/charts/node_modules/d3-time/src/interval.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/linear.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/tickFormat.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/precisionRound.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/precisionPrefix.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/precisionFixed.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/defaultLocale.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/locale.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/identity.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatSpecifier.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatTypes.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatRounded.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatPrefixAuto.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatDefault.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatNumerals.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatGroup.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/exponent.js",
    "ng://@morphatic/charts/node_modules/d3-format/src/formatDecimal.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/continuous.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/number.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/constant.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/cubehelix.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/zoom.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/transform/decompose.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/round.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/value.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/string.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/object.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/number.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/date.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/array.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/rgb.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/color.js",
    "ng://@morphatic/charts/node_modules/d3-interpolate/src/constant.js",
    "ng://@morphatic/charts/node_modules/d3-color/src/cubehelix.js",
    "ng://@morphatic/charts/node_modules/d3-color/src/lab.js",
    "ng://@morphatic/charts/node_modules/d3-color/src/math.js",
    "ng://@morphatic/charts/node_modules/d3-color/src/color.js",
    "ng://@morphatic/charts/node_modules/d3-color/src/define.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/band.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/ordinal.js",
    "ng://@morphatic/charts/node_modules/d3-scale/src/array.js",
    "ng://@morphatic/charts/node_modules/d3-collection/src/set.js",
    "ng://@morphatic/charts/node_modules/d3-collection/src/map.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/max.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/ticks.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/range.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/bisect.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/bisector.js",
    "ng://@morphatic/charts/node_modules/d3-array/src/ascending.js",
    "ng://@morphatic/charts/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n",
    "import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n",
    "import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n",
    "import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n",
    "import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n",
    "import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n",
    "import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n",
    "import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n",
    "import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n",
    "import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n",
    "import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n",
    "import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n",
    "import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n",
    "import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n",
    "export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n",
    "import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n",
    "var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n",
    "import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n",
    "import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n",
    "import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n",
    "import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n",
    "import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n",
    "import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n",
    "import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n",
    "export default function(x) {\n  return x;\n}\n",
    "import formatTypes from \"./formatTypes\";\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n",
    "import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n",
    "import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n",
    "import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n",
    "export default function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n",
    "export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n",
    "export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n",
    "import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n",
    "// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n",
    "import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n",
    "export default function(x) {\n  return +x;\n}\n",
    "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n",
    "import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n",
    "var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n",
    "var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n",
    "export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n",
    "import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n",
    "import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n",
    "import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n",
    "export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n",
    "export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n",
    "import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n",
    "import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n",
    "import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n",
    "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n",
    "import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n",
    "import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n",
    "export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n",
    "import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n",
    "export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n",
    "import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n",
    "import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n",
    "var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n",
    "import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n",
    "export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n",
    "export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n",
    "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n",
    "export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n",
    "import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n",
    "import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n",
    "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n"
  ],
  "names": [
    "MorphaticChartsModule",
    "BarChartComponent",
    "CommonModule",
    "ElementRef",
    "Component",
    "Input",
    "timeYear",
    "day",
    "interval",
    "durationHour",
    "durationMinute",
    "durationWeek",
    "t0",
    "deinterpolate",
    "number",
    "interpolate",
    "constant",
    "cubehelix",
    "color",
    "colorCubehelix",
    "value",
    "rgb",
    "range",
    "slice",
    "array",
    "map"
  ],
  "mappings": "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"
}
